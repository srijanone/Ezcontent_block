<?php

/**
 * @file
 * Used for maintaining content listing component changes.
 */

/**
 * Implements hook_preprocess_block().
 */
function ezcontent_block_preprocess_block(&$variables) {
  // Define constants to avoid magic strings.
  define('BLOCK_TYPE_CONTENT_LISTING_COMPONENT', 'content_listing_component');
  define('VIEW_MODE_FULL', 'full');

  if (in_array($variables['plugin_id'], [
    BLOCK_TYPE_CONTENT_LISTING_COMPONENT,
    'inline_block:' . BLOCK_TYPE_CONTENT_LISTING_COMPONENT,
  ])) {

    $routeOptions = \Drupal::routeMatch()->getRouteObject()->getOptions();
    $blockContentList = isset($routeOptions['_layout_builder']) || isset($routeOptions['_admin_route'])
      ? $variables['content']['content']
      : $variables['content'];

    $block = $blockContentList['#block_content'];

    if (isset($blockContentList) && isset($block)) {
      $block_type = $block->bundle();
      if ($block_type == BLOCK_TYPE_CONTENT_LISTING_COMPONENT) {
        $variables['#attached']['library'][] = 'ezcontent_block/ezcontent_listing_css';
        $block_view_mode = $blockContentList['#view_mode'];
        $helper_block_service = \Drupal::service('ezcontent_block.helper_block');

        switch ($block_view_mode) {
          case VIEW_MODE_FULL:
            $content_list_data = $helper_block_service->getContentListingBlock($block);
            if (isset($routeOptions['_layout_builder']) || isset($routeOptions['_admin_route'])) {
              $variables['content']['content'] = array_merge($blockContentList, $content_list_data);
            } else {
              $variables['content'] = array_merge($blockContentList, $content_list_data);
            }
            break;
        }
      }
    }
  }
}
